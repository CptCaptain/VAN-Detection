data = {'val': {'type': 'CocoDataset', 'ann_file': 'datasets/coco/annotations/instances_val2017.json', 'pipeline': [{'type': 'LoadImageFromFile'}, {'flip': False, 'type': 'MultiScaleFlipAug', 'img_scale': [(1333, 800)], 'transforms': [{'type': 'Resize', 'keep_ratio': True}, {'type': 'RandomFlip'}, {'std': [1, 1, 1], 'mean': [102.9801, 115.9465, 122.7717], 'type': 'Normalize', 'to_rgb': False}, {'type': 'Pad', 'size_divisor': 32}, {'keys': ['img'], 'type': 'ImageToTensor'}, {'keys': ['img'], 'type': 'Collect'}]}], 'img_prefix': 'datasets/coco/val2017/'}, 'test': {'type': 'CocoDataset', 'ann_file': 'datasets/coco/annotations/instances_val2017.json', 'pipeline': [{'type': 'LoadImageFromFile'}, {'flip': False, 'type': 'MultiScaleFlipAug', 'img_scale': [(1333, 800)], 'transforms': [{'type': 'Resize', 'keep_ratio': True}, {'type': 'RandomFlip'}, {'std': [1, 1, 1], 'mean': [102.9801, 115.9465, 122.7717], 'type': 'Normalize', 'to_rgb': False}, {'type': 'Pad', 'size_divisor': 32}, {'keys': ['img'], 'type': 'ImageToTensor'}, {'keys': ['img'], 'type': 'Collect'}]}], 'img_prefix': 'datasets/coco/val2017/'}, 'train': {'type': 'CocoDataset', 'ann_file': 'datasets/coco/annotations/instances_train2017.json', 'pipeline': [{'type': 'LoadImageFromFile'}, {'type': 'LoadAnnotations', 'with_bbox': True}, {'type': 'Resize', 'img_scale': [(1333, 800)], 'keep_ratio': True}, {'type': 'RandomFlip', 'flip_ratio': 0.5}, {'std': [1, 1, 1], 'mean': [102.9801, 115.9465, 122.7717], 'type': 'Normalize', 'to_rgb': False}, {'type': 'Pad', 'size_divisor': 32}, {'type': 'DefaultFormatBundle'}, {'keys': ['img', 'gt_bboxes', 'gt_labels'], 'type': 'Collect'}], 'img_prefix': 'datasets/coco/train2017/'}, 'samples_per_gpu': 2, 'workers_per_gpu': 2}
model = {'neck': {'type': 'FPN', 'num_outs': 5, 'in_channels': [256, 512, 1024, 2048], 'start_level': 1, 'out_channels': 256, 'add_extra_convs': 'on_output', 'relu_before_extra_convs': True}, 'type': 'FCOS', 'backbone': {'type': 'ResNet', 'depth': 50, 'style': 'caffe', 'init_cfg': {'type': 'Pretrained', 'checkpoint': 'open-mmlab://detectron/resnet50_caffe'}, 'norm_cfg': {'type': 'BN', 'requires_grad': False}, 'norm_eval': True, 'num_stages': 4, 'out_indices': [0, 1, 2, 3], 'frozen_stages': 1}, 'test_cfg': {'nms': {'type': 'nms', 'iou_threshold': 0.5}, 'nms_pre': 1000, 'score_thr': 0.05, 'max_per_img': 100, 'min_bbox_size': 0}, 'bbox_head': {'type': 'FCOSHead', 'strides': [8, 16, 32, 64, 128], 'loss_cls': {'type': 'FocalLoss', 'alpha': 0.25, 'gamma': 2, 'loss_weight': 1, 'use_sigmoid': True}, 'loss_bbox': {'type': 'IoULoss', 'loss_weight': 1}, 'in_channels': 256, 'num_classes': 80, 'feat_channels': 256, 'stacked_convs': 4, 'loss_centerness': {'type': 'CrossEntropyLoss', 'loss_weight': 1, 'use_sigmoid': True}}, 'train_cfg': {'debug': False, 'assigner': {'type': 'MaxIoUAssigner', 'min_pos_iou': 0, 'neg_iou_thr': 0.4, 'pos_iou_thr': 0.5, 'ignore_iof_thr': -1}, 'pos_weight': -1, 'allowed_border': -1}}
runner = {'type': 'EpochBasedRunner', 'max_epochs': 12}
gpu_ids = [0]
work_dir = './work_dirs/fcos_r50_caffe_fpn_gn-head_1x_coco_adam'
workflow = [['train', 1], ['val', 1]]
data_root = 'datasets/coco/'
load_from = None
log_level = 'INFO'
lr_config = {'power': 0.9, 'min_lr': 0, 'policy': 'poly', 'by_epoch': False}
optimizer = {'lr': 0.0001, 'type': 'AdamW', 'weight_decay': 0.0001}
evaluation = {'metric': ['bbox'], 'interval': 1}
log_config = {'hooks': [{'type': 'TextLoggerHook', 'by_epoch': True}, {'type': 'MMDetWandbHook', 'by_epoch': True, 'interval': 10, 'init_kwargs': {'tags': ['backbone:ResNet', 'neck:FPN', 'head:FCOS', 'pretrained', 'baseline', 'schedule:1x-adam'], 'entity': 'nkoch-aitastic', 'project': 'van-detection'}, 'log_checkpoint': True, 'num_eval_images': 100, 'log_checkpoint_metadata': True}], 'interval': 50}
auto_resume = False
dist_params = {'backend': 'nccl'}
resume_from = None
custom_hooks = [{'type': 'NumClassCheckHook'}]
dataset_type = 'CocoDataset'
img_norm_cfg = {'std': [1, 1, 1], 'mean': [102.9801, 115.9465, 122.7717], 'to_rgb': False}
test_pipeline = [{'type': 'LoadImageFromFile'}, {'flip': False, 'type': 'MultiScaleFlipAug', 'img_scale': [(1333, 800)], 'transforms': [{'type': 'Resize', 'keep_ratio': True}, {'type': 'RandomFlip'}, {'std': [1, 1, 1], 'mean': [102.9801, 115.9465, 122.7717], 'type': 'Normalize', 'to_rgb': False}, {'type': 'Pad', 'size_divisor': 32}, {'keys': ['img'], 'type': 'ImageToTensor'}, {'keys': ['img'], 'type': 'Collect'}]}]
train_pipeline = [{'type': 'LoadImageFromFile'}, {'type': 'LoadAnnotations', 'with_bbox': True}, {'type': 'Resize', 'img_scale': [(1333, 800)], 'keep_ratio': True}, {'type': 'RandomFlip', 'flip_ratio': 0.5}, {'std': [1, 1, 1], 'mean': [102.9801, 115.9465, 122.7717], 'type': 'Normalize', 'to_rgb': False}, {'type': 'Pad', 'size_divisor': 32}, {'type': 'DefaultFormatBundle'}, {'keys': ['img', 'gt_bboxes', 'gt_labels'], 'type': 'Collect'}]
cudnn_benchmark = True
optimizer_config = {}
checkpoint_config = {'by_epoch': True, 'max_keep_ckpts': 3}
